//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AP.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class Inventory
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Inventory()
        {
            this.Products = new HashSet<Products>();
        }
    
        public int InventoryID { get; set; }
        public Nullable<decimal> UnitPrice { get; set; }
        public Nullable<int> UnitsInStock { get; set; }
        public Nullable<System.DateTime> LastUpdated { get; set; }
        public Nullable<int> ProductId { get; set; }
        public Nullable<System.DateTime> DateAdded { get; set; }
        public string ModifiedBy { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Products> Products { get; set; }
    }
    //TODO: Principios utilizados: S - O - I
    // S: (Single Responsibility Principle)
    // Por qué? La clase Inventory se dedica exclusivamente a representar los datos relacionados con el inventario,
    // como existencias, precios y fechas.
    // O: (Open/Closed Principle)
    // Por qué? Puede extenderse mediante herencia o clases parciales para agregar nueva funcionalidad
    // (por ejemplo, cálculos de stock o auditoría) sin alterar la estructura actual.
    // I: (Interface Segregation Principle)
    // Por qué? Podría implementar interfaces como IInventoryEntity o ITrackable,
    // que permitan una segregación de responsabilidades sin sobrecargar la clase.
}
